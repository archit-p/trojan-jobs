{"version":3,"file":"component---src-pages-index-js-11e8204f78d004ae8d5c.js","mappings":"oNAAA,EAAe,IAA0B,sDCkIzC,MA3HA,WACE,IAC8BA,GAC1BC,EAAAA,EAAAA,gBAAe,cADjBC,kBAAqBC,MAkBvB,GAAwCC,EAAAA,EAAAA,UAASJ,GAA1CK,EAAP,KAAqBC,EAArB,KAsCA,OACE,gCACE,gBAACC,EAAA,EAAD,KACE,kEACA,wBAAMC,IAAI,OAAOC,KAAK,eAAeC,KAAMC,KAE7C,uBAAKC,UAAU,0BACb,0BAAQA,UAAU,QAChB,sBAAIA,UAAU,yBAAd,+BACA,uBAAKC,KAAK,eAAeD,UAAU,iBAAnC,8BAGA,2BAASA,UAAU,QACjB,2BACE,yBACEH,KAAK,OACLG,UAAU,0DACVE,YAAY,YACZC,SAAU,SAACC,GAAD,OAtDJC,EAsDsBD,EAAEE,OAAOC,WApD/Cb,EADEW,EAEAjB,EAAKoB,QAAO,SAACC,GACX,ICjC0CC,EAASC,EDiC7CC,EAAQ,IAAIC,OAAOC,OAAOH,IAAlB,ICjC4BD,EDiC5B,QChCjBC,IACHA,EAAMD,EAAQK,MAAM,IAGtBL,EAAQC,IAAMA,ED4BQ,EC3BfD,GD2BuCL,EAAQW,gBAC9C,QAAIP,EAAIQ,YAAYC,MAAMF,cAAcG,MAAMP,MAG1CH,EAAIQ,YAAYG,SAASJ,cAAcG,MAAMP,IAI/CH,EAAIQ,YAAYI,KAAKb,QAAO,SAACc,GAAD,OAASA,EAAIN,cAAcG,MAAMP,MAC1DW,OAAS,KAQFnC,GArBpB,IAAoBiB,MAyDV,uBAAKL,UAAU,QACb,yBACEH,KAAK,WACL2B,GAAG,gBACHrB,SAAU,SAACC,GAAD,OApCAqB,EAoCsBrB,EAAEE,OAAOoB,QAnCrDC,QAAQC,IAAIH,QAEV/B,EADE+B,EAEAhC,EAAae,QAAO,SAACC,GAAD,OAASA,EAAIQ,YAAYI,KAAKQ,SAAS,WAG7CzC,GAPpB,IAAwBqC,KAsCZ,yBACEK,QAAQ,gBACR9B,UAAU,yCAFZ,gBASN,gBAAC+B,EAAA,EAAD,MACCtC,EAAauC,KAAI,SAACvB,GAAD,OAChB,gCACE,2BAAST,UAAU,QACjB,gBAAC,EAAAiC,KAAD,CAAMC,GAAIzB,EAAI0B,OAAOC,MACnB,0BAAK3B,EAAIQ,YAAYC,QAEvB,uBAAKjB,KAAK,eAAeD,UAAU,4BAChCS,EAAIQ,YAAYG,UAEnB,0BAAQpB,UAAU,oDAChB,4BAAOS,EAAIQ,YAAYoB,UACtB5B,EAAIQ,YAAYI,KAAKW,KAAI,SAACV,GAAD,OACxB,gCACE,wBAAMtB,UAAU,QAAhB,KACA,wBAAMA,UAAU,QAAQsB,SAKhC,gBAACS,EAAA,EAAD,UAGJ,gBAACO,EAAA,EAAD","sources":["webpack://trojan-jobs/./src/images/favicon.png","webpack://trojan-jobs/./src/pages/index.js","webpack://trojan-jobs/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/favicon-b2e7e6cb1126a9af1b965463ba0286b1.png\";","import React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Ruler from \"../components/Ruler\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport Footer from \"../components/Footer\";\nimport Favicon from \"../images/favicon.png\";\n\nfunction Index() {\n  let {\n    allMarkdownRemark: { nodes: jobs },\n  } = useStaticQuery(graphql`\n    query DataQuery {\n      allMarkdownRemark(sort: { fields: frontmatter___postedAt, order: DESC }) {\n        nodes {\n          frontmatter {\n            title\n            employer\n            postedAt(fromNow: true)\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `);\n  const [filteredJobs, setFilteredJobs] = useState(jobs);\n\n  function searchJobs(keyword) {\n    if (keyword) {\n      setFilteredJobs(\n        jobs.filter((job) => {\n          const regex = new RegExp(String.raw`${keyword.toLowerCase()}`);\n          if (job.frontmatter.title.toLowerCase().match(regex)) {\n            return true;\n          }\n          if (job.frontmatter.employer.toLowerCase().match(regex)) {\n            return true;\n          }\n          if (\n            job.frontmatter.tags.filter((tag) => tag.toLowerCase().match(regex))\n              .length > 0\n          ) {\n            return true;\n          }\n          return false;\n        })\n      );\n    } else {\n      setFilteredJobs(jobs);\n    }\n  }\n\n  function togglePaidOnly(selected) {\n    console.log(selected);\n    if (selected) {\n      setFilteredJobs(\n        filteredJobs.filter((job) => job.frontmatter.tags.includes(\"Paid\"))\n      );\n    } else {\n      setFilteredJobs(jobs);\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Trojan Jobs - Find On-Campus Jobs</title>\n        <link rel=\"icon\" type=\"image/x-icon\" href={Favicon}></link>\n      </Helmet>\n      <div className=\"max-w-2xl mx-auto px-2\">\n        <header className=\"py-3\">\n          <h1 className=\"text-lg font-semibold\">Trojan Jobs üë©‚Äçüíªüë®‚Äçüíºüë©‚Äçüî¨</h1>\n          <div role=\"doc-subtitle\" className=\"text-gray-600\">\n            Find on-campus jobs at USC\n          </div>\n          <section className=\"mt-2\">\n            <div>\n              <input\n                type=\"text\"\n                className=\"w-full border rounded-md border-gray-300 p-2 font-light\"\n                placeholder=\"Search...\"\n                onChange={(e) => searchJobs(e.target.value)}\n              />\n            </div>\n            <div className=\"mt-2\">\n              <input\n                type=\"checkbox\"\n                id=\"paid-checkbox\"\n                onChange={(e) => togglePaidOnly(e.target.checked)}\n              />\n              <label\n                htmlFor=\"paid-checkbox\"\n                className=\"ml-2 font-light text-gray-600 text-sm\"\n              >\n                Paid only\n              </label>\n            </div>\n          </section>\n        </header>\n        <Ruler />\n        {filteredJobs.map((job) => (\n          <>\n            <article className=\"py-3\">\n              <Link to={job.fields.slug}>\n                <h2>{job.frontmatter.title}</h2>\n              </Link>\n              <div role=\"doc-subtitle\" className=\"text-gray-600 font-light\">\n                {job.frontmatter.employer}\n              </div>\n              <footer className=\"text-gray-600 text-sm capitalize mt-2 font-light\">\n                <time>{job.frontmatter.postedAt}</time>\n                {job.frontmatter.tags.map((tag) => (\n                  <>\n                    <span className=\"ml-2\">‚Ä¢</span>\n                    <span className=\"ml-2\">{tag}</span>\n                  </>\n                ))}\n              </footer>\n            </article>\n            <Ruler />\n          </>\n        ))}\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Index;\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}"],"names":["jobs","useStaticQuery","allMarkdownRemark","nodes","useState","filteredJobs","setFilteredJobs","Helmet","rel","type","href","Favicon","className","role","placeholder","onChange","e","keyword","target","value","filter","job","strings","raw","regex","RegExp","String","slice","toLowerCase","frontmatter","title","match","employer","tags","tag","length","id","selected","checked","console","log","includes","htmlFor","Ruler","map","Link","to","fields","slug","postedAt","Footer"],"sourceRoot":""}